<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="icon" href="/public/favicon.ico" type="image/x-icon">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f8fafc;
            color: #333;
        }

        /* Header */
        .admin-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .header-left h1 {
            font-size: 24px;
            font-weight: 600;
        }

        .header-left span {
            font-size: 14px;
            opacity: 0.9;
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .admin-info {
            text-align: right;
        }

        .logout-btn {
            background: rgba(255,255,255,0.2);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .logout-btn:hover {
            background: rgba(255,255,255,0.3);
        }

        /* Main Content */
        .admin-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px;
        }

        /* Stats Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-left: 4px solid;
        }

        .stat-card.total { border-left-color: #667eea; }
        .stat-card.active { border-left-color: #48bb78; }
        .stat-card.inactive { border-left-color: #ed8936; }
        .stat-card.admins { border-left-color: #9f7aea; }

        .stat-card h3 {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .stat-card p {
            color: #666;
            font-size: 14px;
        }

        /* Action Buttons */
        .action-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .action-btn {
            background: #667eea;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: background 0.3s;
        }

        .action-btn:hover {
            background: #5a6fd8;
        }

        .action-btn.danger {
            background: #e53e3e;
        }

        .action-btn.danger:hover {
            background: #c53030;
        }

        /* Users Table */
        .users-table-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .table-header {
            background: #f7fafc;
            padding: 20px 25px;
            border-bottom: 1px solid #e2e8f0;
        }

        .table-header h2 {
            font-size: 18px;
            color: #2d3748;
        }

        .users-table {
            width: 100%;
            border-collapse: collapse;
        }

        .users-table th,
        .users-table td {
            padding: 15px 20px;
            text-align: left;
            border-bottom: 1px solid #e2e8f0;
        }

        .users-table th {
            background: #f7fafc;
            font-weight: 600;
            color: #4a5568;
            font-size: 14px;
        }

        .users-table tr:hover {
            background: #f7fafc;
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-active {
            background: #c6f6d5;
            color: #22543d;
        }

        .status-inactive {
            background: #fed7cc;
            color: #9c4221;
        }

        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 500;
        }

        .btn-primary { background: #667eea; color: white; }
        .btn-success { background: #48bb78; color: white; }
        .btn-warning { background: #ed8936; color: white; }
        .btn-danger { background: #e53e3e; color: white; }

        .btn-sm:hover {
            opacity: 0.9;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 500px;
            position: relative;
        }

        .modal-close {
            position: absolute;
            top: 15px;
            right: 20px;
            font-size: 24px;
            cursor: pointer;
            color: #999;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #4a5568;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px 12px;
            border: 2px solid #e2e8f0;
            border-radius: 6px;
            font-size: 14px;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #667eea;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .admin-header {
                padding: 15px 20px;
                flex-direction: column;
                gap: 15px;
            }

            .admin-container {
                padding: 20px 15px;
            }

            .action-bar {
                flex-direction: column;
                align-items: stretch;
            }

            .users-table {
                font-size: 14px;
            }

            .users-table th,
            .users-table td {
                padding: 10px 8px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="admin-header">
        <div class="header-left">
            <h1>üõ°Ô∏è Admin Dashboard</h1>
            <span>User Management System</span>
        </div>
        <div class="header-right">
            <div class="admin-info">
                <div><strong>{{admin.name}}</strong></div>
                <div style="opacity: 0.8;">{{admin.email}}</div>
            </div>
            <form action="/admin/logout" method="post" style="display: inline;">
                <button type="submit" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </form>
        </div>
    </div>

    <!-- Main Content -->
    <div class="admin-container">
        <!-- Statistics -->
        <div class="stats-grid">
            <div class="stat-card total">
                <h3>{{stats.total}}</h3>
                <p>Total Users</p>
            </div>
            <div class="stat-card active">
                <h3>{{stats.active}}</h3>
                <p>Active Users</p>
            </div>
            <div class="stat-card inactive">
                <h3>{{stats.inactive}}</h3>
                <p>Inactive Users</p>
            </div>
            <div class="stat-card admins">
                <h3>{{stats.admins}}</h3>
                <p>Administrators</p>
            </div>
        </div>

        <!-- Action Bar -->
        <div class="action-bar">
            <h2 style="color: #2d3748;">User Management</h2>
            <div style="display: flex; gap: 10px;">
                <button class="action-btn" onclick="openCreateUserModal()">
                    <i class="fas fa-plus"></i> Create User
                </button>
                <button class="action-btn" onclick="refreshData()">
                    <i class="fas fa-refresh"></i> Refresh
                </button>
            </div>
        </div>


        <!-- Users Table -->
        <div class="users-table-container">
            <div class="table-header">
                <h2>All Users ({{users.length}})</h2>
            </div>
            
            <table class="users-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Role</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th>Admin Controls</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each users}}
                    <tr data-user-id="{{this.id}}">
                        <td>{{this.name}}</td>
                        <td>{{this.email}}</td>
                        <td>{{this.phonenumber}}</td>
                        <td><span class="status-badge">{{this.role}}</span></td>
                        <td>
                            <span class="status-badge {{#if (eq this.status 'active')}}status-active{{else}}status-inactive{{/if}}">
                                {{this.status}}
                            </span>
                        </td>
                        <td>{{formatDate this.createdAt}}</td>
                        <td>
                            <div class="action-buttons">
                                {{#if (eq this.status 'active')}}
                                    <button class="btn-sm btn-warning" onclick="updateUserStatus('{{this.id}}', 'inactive')" title="Deactivate user account">
                                        <i class="fas fa-pause"></i> Deactivate
                                    </button>
                                {{else}}
                                    <button class="btn-sm btn-success" onclick="updateUserStatus('{{this.id}}', 'active')" title="Activate user account">
                                        <i class="fas fa-play"></i> Activate
                                    </button>
                                {{/if}}
                                <button class="btn-sm btn-danger" onclick="deleteUser('{{this.id}}', '{{this.name}}')" title="Permanently delete user">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>

    <!-- Create User Modal -->
    <div id="createUserModal" class="modal">
        <div class="modal-content">
            <span class="modal-close" onclick="closeModal('createUserModal')">&times;</span>
            <h2 style="margin-bottom: 20px;">Create New User</h2>
            
            <form id="createUserForm">
                <div class="form-group">
                    <label for="userName">Full Name</label>
                    <input type="text" id="userName" name="name" required>
                </div>
                
                <div class="form-group">
                    <label for="userEmail">Email Address</label>
                    <input type="email" id="userEmail" name="email" required>
                </div>
                
                <div class="form-group">
                    <label for="userPassword">Password</label>
                    <input type="password" id="userPassword" name="password" required>
                </div>
                
                <div class="form-group">
                    <label for="userPhone">Phone Number</label>
                    <input type="text" id="userPhone" name="phonenumber">
                </div>
                
                <div class="form-group">
                    <label for="userRole">Role</label>
                    <select id="userRole" name="role">
                        <option value="user">User</option>
                        <option value="admin">Admin</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="userStatus">Status</label>
                    <select id="userStatus" name="status">
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>
                
                <div style="display: flex; gap: 10px; justify-content: flex-end;">
                    <button type="button" class="action-btn" style="background: #a0aec0;" onclick="closeModal('createUserModal')">
                        Cancel
                    </button>
                    <button type="submit" class="action-btn">
                        <i class="fas fa-plus"></i> Create User
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Global functions for admin operations
        
        function openCreateUserModal() {
            document.getElementById('createUserModal').style.display = 'block';
        }
        
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }
        
        function refreshData() {
            window.location.reload();
        }
        
        // Create user form submission
        document.getElementById('createUserForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const userData = Object.fromEntries(formData);
            
            try {
                const response = await fetch('/admin/api/users', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(userData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('User created successfully!');
                    window.location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Failed to create user: ' + error.message);
            }
        });
        
        // Update user status
        async function updateUserStatus(userId, status) {
            const action = status === 'active' ? 'activate' : 'deactivate';
            if (!confirm(`Are you sure you want to ${action} this user?`)) return;
            
            try {
                const response = await fetch(`/admin/api/users/${userId}/status`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert(result.message);
                    window.location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Failed to update user: ' + error.message);
            }
        }
        
        // Delete user
        async function deleteUser(userId, userName) {
            if (!confirm(`Are you sure you want to delete user "${userName}"? This action cannot be undone.`)) return;
            
            try {
                const response = await fetch(`/admin/api/users/${userId}`, {
                    method: 'DELETE'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert(result.message);
                    window.location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                alert('Failed to delete user: ' + error.message);
            }
        }
        

        
        // Close modal when clicking outside
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = 'none';
            }
        }
    </script>
</body>
</html>
